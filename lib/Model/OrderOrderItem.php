<?php
/**
 * OrderOrderItem
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  BolApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * v6
 *
 * The bol.com API for Retailers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BolApi\Client\Model;

use \ArrayAccess;
use \BolApi\Client\ObjectSerializer;

/**
 * OrderOrderItem Class Doc Comment
 *
 * @category Class
 * @description Order item details from an order.
 * @package  BolApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class OrderOrderItem implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderOrderItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'order_item_id' => 'string',
        'cancellation_request' => 'bool',
        'fulfilment' => '\BolApi\Client\Model\OrderFulfilment',
        'offer' => '\BolApi\Client\Model\OrderOffer',
        'product' => '\BolApi\Client\Model\OrderProduct',
        'quantity' => 'int',
        'quantity_shipped' => 'int',
        'quantity_cancelled' => 'int',
        'unit_price' => 'float',
        'commission' => 'float',
        'additional_services' => '\BolApi\Client\Model\AdditionalService[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'order_item_id' => null,
        'cancellation_request' => null,
        'fulfilment' => null,
        'offer' => null,
        'product' => null,
        'quantity' => 'int32',
        'quantity_shipped' => 'int32',
        'quantity_cancelled' => 'int32',
        'unit_price' => null,
        'commission' => null,
        'additional_services' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_item_id' => 'orderItemId',
        'cancellation_request' => 'cancellationRequest',
        'fulfilment' => 'fulfilment',
        'offer' => 'offer',
        'product' => 'product',
        'quantity' => 'quantity',
        'quantity_shipped' => 'quantityShipped',
        'quantity_cancelled' => 'quantityCancelled',
        'unit_price' => 'unitPrice',
        'commission' => 'commission',
        'additional_services' => 'additionalServices'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_item_id' => 'setOrderItemId',
        'cancellation_request' => 'setCancellationRequest',
        'fulfilment' => 'setFulfilment',
        'offer' => 'setOffer',
        'product' => 'setProduct',
        'quantity' => 'setQuantity',
        'quantity_shipped' => 'setQuantityShipped',
        'quantity_cancelled' => 'setQuantityCancelled',
        'unit_price' => 'setUnitPrice',
        'commission' => 'setCommission',
        'additional_services' => 'setAdditionalServices'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_item_id' => 'getOrderItemId',
        'cancellation_request' => 'getCancellationRequest',
        'fulfilment' => 'getFulfilment',
        'offer' => 'getOffer',
        'product' => 'getProduct',
        'quantity' => 'getQuantity',
        'quantity_shipped' => 'getQuantityShipped',
        'quantity_cancelled' => 'getQuantityCancelled',
        'unit_price' => 'getUnitPrice',
        'commission' => 'getCommission',
        'additional_services' => 'getAdditionalServices'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_item_id'] = $data['order_item_id'] ?? null;
        $this->container['cancellation_request'] = $data['cancellation_request'] ?? null;
        $this->container['fulfilment'] = $data['fulfilment'] ?? null;
        $this->container['offer'] = $data['offer'] ?? null;
        $this->container['product'] = $data['product'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['quantity_shipped'] = $data['quantity_shipped'] ?? null;
        $this->container['quantity_cancelled'] = $data['quantity_cancelled'] ?? null;
        $this->container['unit_price'] = $data['unit_price'] ?? null;
        $this->container['commission'] = $data['commission'] ?? null;
        $this->container['additional_services'] = $data['additional_services'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_item_id
     *
     * @return string|null
     */
    public function getOrderItemId()
    {
        return $this->container['order_item_id'];
    }

    /**
     * Sets order_item_id
     *
     * @param string|null $order_item_id The id for the order item. One order can have multiple order items, but the list can only take one item.
     *
     * @return self
     */
    public function setOrderItemId($order_item_id)
    {
        $this->container['order_item_id'] = $order_item_id;

        return $this;
    }

    /**
     * Gets cancellation_request
     *
     * @return bool|null
     */
    public function getCancellationRequest()
    {
        return $this->container['cancellation_request'];
    }

    /**
     * Sets cancellation_request
     *
     * @param bool|null $cancellation_request Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.
     *
     * @return self
     */
    public function setCancellationRequest($cancellation_request)
    {
        $this->container['cancellation_request'] = $cancellation_request;

        return $this;
    }

    /**
     * Gets fulfilment
     *
     * @return \BolApi\Client\Model\OrderFulfilment|null
     */
    public function getFulfilment()
    {
        return $this->container['fulfilment'];
    }

    /**
     * Sets fulfilment
     *
     * @param \BolApi\Client\Model\OrderFulfilment|null $fulfilment fulfilment
     *
     * @return self
     */
    public function setFulfilment($fulfilment)
    {
        $this->container['fulfilment'] = $fulfilment;

        return $this;
    }

    /**
     * Gets offer
     *
     * @return \BolApi\Client\Model\OrderOffer|null
     */
    public function getOffer()
    {
        return $this->container['offer'];
    }

    /**
     * Sets offer
     *
     * @param \BolApi\Client\Model\OrderOffer|null $offer offer
     *
     * @return self
     */
    public function setOffer($offer)
    {
        $this->container['offer'] = $offer;

        return $this;
    }

    /**
     * Gets product
     *
     * @return \BolApi\Client\Model\OrderProduct|null
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param \BolApi\Client\Model\OrderProduct|null $product product
     *
     * @return self
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int|null $quantity Amount of ordered products for this order item id.
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets quantity_shipped
     *
     * @return int|null
     */
    public function getQuantityShipped()
    {
        return $this->container['quantity_shipped'];
    }

    /**
     * Sets quantity_shipped
     *
     * @param int|null $quantity_shipped Amount of shipped products for this order item id.
     *
     * @return self
     */
    public function setQuantityShipped($quantity_shipped)
    {
        $this->container['quantity_shipped'] = $quantity_shipped;

        return $this;
    }

    /**
     * Gets quantity_cancelled
     *
     * @return int|null
     */
    public function getQuantityCancelled()
    {
        return $this->container['quantity_cancelled'];
    }

    /**
     * Sets quantity_cancelled
     *
     * @param int|null $quantity_cancelled Amount of cancelled products for this order item id.
     *
     * @return self
     */
    public function setQuantityCancelled($quantity_cancelled)
    {
        $this->container['quantity_cancelled'] = $quantity_cancelled;

        return $this;
    }

    /**
     * Gets unit_price
     *
     * @return float|null
     */
    public function getUnitPrice()
    {
        return $this->container['unit_price'];
    }

    /**
     * Sets unit_price
     *
     * @param float|null $unit_price The selling price to the customer of a single unit including VAT.
     *
     * @return self
     */
    public function setUnitPrice($unit_price)
    {
        $this->container['unit_price'] = $unit_price;

        return $this;
    }

    /**
     * Gets commission
     *
     * @return float|null
     */
    public function getCommission()
    {
        return $this->container['commission'];
    }

    /**
     * Sets commission
     *
     * @param float|null $commission The commission for all quantities of this order item.
     *
     * @return self
     */
    public function setCommission($commission)
    {
        $this->container['commission'] = $commission;

        return $this;
    }

    /**
     * Gets additional_services
     *
     * @return \BolApi\Client\Model\AdditionalService[]|null
     */
    public function getAdditionalServices()
    {
        return $this->container['additional_services'];
    }

    /**
     * Sets additional_services
     *
     * @param \BolApi\Client\Model\AdditionalService[]|null $additional_services additional_services
     *
     * @return self
     */
    public function setAdditionalServices($additional_services)
    {
        $this->container['additional_services'] = $additional_services;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


